Changeset created on Thu May 20 10:51:40 CEST 2010 by Seek You Too

Description: DrilldownFieldnames back in meresco components with Exception Handling

    DrilldownFieldnames will now handle NoFacetIndexException and reverse translate the
    wrong fieldname.

Baseline version: meresco/meresco-components/workingsets/2.23.5-EduRep/version_6

diff --unidirectional-new-file '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' --recursive --unified version_6/meresco/components/examples/dna/server.py version_7/meresco/components/examples/dna/server.py
--- version_6/meresco/components/examples/dna/server.py	2010-05-20 15:15:22.000000000 +0200
+++ version_7/meresco/components/examples/dna/server.py	2010-05-20 15:16:35.000000000 +0200
@@ -7,7 +7,8 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -34,9 +35,9 @@
 from meresco.core import be, Observable, TransactionScope, ResourceManager, Transparant
 
 from meresco.components import StorageComponent, FilterField, RenameField, XmlParseLxml, XmlXPath, XmlPrintLxml, Xml2Fields, Venturi, FilterMessages, Amara2Lxml, RewritePartname, Rss, RssItem, Lxml2Amara
-from meresco.components.facetindex import Drilldown, LuceneIndex, CQL2LuceneQuery, Fields2LuceneDocumentTx
+from meresco.components.facetindex import Drilldown, LuceneIndex, CQL2LuceneQuery, Fields2LuceneDocumentTx, DrilldownFieldnames
 from meresco.components.facetindex.tools import unlock
-from meresco.components.drilldown import SRUTermDrilldown, DrilldownFieldnames
+from meresco.components.drilldown import SRUTermDrilldown
 from meresco.components.http import PathFilter, ObservableHttpServer
 from meresco.components.http.webrequestserver import WebRequestServer
 from meresco.components.sru import SruParser, SruHandler, SRURecordUpdate
@@ -134,8 +135,7 @@
                             (storageComponent,),
                             (SRUTermDrilldown(),
                                 (DrilldownFieldnames(
-                                    lambda field: DRILLDOWN_PREFIX + field,
-                                    lambda field: field[len(DRILLDOWN_PREFIX):]),
+                                    lambda field: DRILLDOWN_PREFIX + field,),
                                         (drilldownComponent,)
                                 ),
                                 (CQL2LuceneQuery(unqualifiedTermFields),
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_6/meresco/components/facetindex/drilldownfieldnames.py version_7/meresco/components/facetindex/drilldownfieldnames.py
--- version_6/meresco/components/facetindex/drilldownfieldnames.py	1970-01-01 01:00:00.000000000 +0100
+++ version_7/meresco/components/facetindex/drilldownfieldnames.py	2010-05-20 10:51:29.000000000 +0200
@@ -0,0 +1,51 @@
+## begin license ##
+#
+#    Meresco Components are components to build searchengines, repositories
+#    and archives, based on Meresco Core.
+#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
+#       http://www.kennisnetictopschool.nl
+#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
+#
+#    This file is part of Meresco Components.
+#
+#    Meresco Components is free software; you can redistribute it and/or modify
+#    it under the terms of the GNU General Public License as published by
+#    the Free Software Foundation; either version 2 of the License, or
+#    (at your option) any later version.
+#
+#    Meresco Components is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU General Public License for more details.
+#
+#    You should have received a copy of the GNU General Public License
+#    along with Meresco Components; if not, write to the Free Software
+#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+## end license ##
+from meresco.core.observable import Observable
+from drilldown import NoFacetIndexException
+
+class DrilldownFieldnames(Observable):
+    def __init__(self, lookup):
+        Observable.__init__(self)
+        self.lookup = lookup
+
+    def drilldown(self, docNumbers, fieldsAndMaximums):
+        reverseLookup = {}
+        translatedFields = []
+        for field, maximum, sort in fieldsAndMaximums:
+            translated = self.lookup(field)
+            translatedFields.append((translated, maximum, sort))
+            reverseLookup[translated] = field
+        try:
+            drilldownResults = self.any.drilldown(docNumbers, translatedFields)
+            return [(reverseLookup[field], termCounts)
+                for field, termCounts in drilldownResults]
+        except NoFacetIndexException, e:
+            raise NoFacetIndexException(reverseLookup[e.field], e.fields)
+            
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_6/meresco/components/facetindex/drilldown.py version_7/meresco/components/facetindex/drilldown.py
--- version_6/meresco/components/facetindex/drilldown.py	2010-05-18 17:26:17.000000000 +0200
+++ version_7/meresco/components/facetindex/drilldown.py	2010-05-20 10:51:29.000000000 +0200
@@ -41,12 +41,10 @@
 
 
 class NoFacetIndexException(Exception):
-
     def __init__(self, field, fields):
-        self._str = "No facetindex for field '%s'. Available fields: %s" % (field, ', '.join("'%s'" % field for field in fields))
-
-    def __str__(self):
-        return self._str
+        Exception.__init__(self, "No facetindex for field '%s'. Available fields: %s" % (field, ', '.join("'%s'" % field for field in fields)))
+        self.field = field
+        self.fields = fields
 
 class Drilldown(object):
 
@@ -140,6 +138,9 @@
     def docsetlist(self, field):
         return self._docsetlists[field]
 
+    def listFields(self):
+        return self._docsetlists.keys()
+
     def drilldown(self, docset, drilldownFieldnamesAndMaximumResults=None):
         allActualFields = self._docsetlists.keys()
         if not drilldownFieldnamesAndMaximumResults:
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_6/meresco/components/facetindex/__init__.py version_7/meresco/components/facetindex/__init__.py
--- version_6/meresco/components/facetindex/__init__.py	2010-05-18 17:26:17.000000000 +0200
+++ version_7/meresco/components/facetindex/__init__.py	2010-05-20 10:51:29.000000000 +0200
@@ -38,6 +38,7 @@
 
 from lucene import LuceneIndex
 from drilldown import Drilldown
+from drilldownfieldnames import DrilldownFieldnames
 from document import Document, IDFIELD, DocumentException
 from docset import DocSet
 from docsetlist import DocSetList
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_6/meresco/components/facetindex/lucene.py version_7/meresco/components/facetindex/lucene.py
--- version_6/meresco/components/facetindex/lucene.py	2010-05-18 17:26:17.000000000 +0200
+++ version_7/meresco/components/facetindex/lucene.py	2010-05-20 10:51:29.000000000 +0200
@@ -217,6 +217,9 @@
             return Sort(sortBy, bool(sortDescending))
         return None
 
+    def listFields(self):
+        return iterJ(self._existingFieldNames)
+
     def close(self):
         self._writer and self._writer.close()
         self._reader = None
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_6/test/_alltests.py version_7/test/_alltests.py
--- version_6/test/_alltests.py	2010-05-18 17:26:17.000000000 +0200
+++ version_7/test/_alltests.py	2010-05-20 10:51:29.000000000 +0200
@@ -64,6 +64,7 @@
 from facetindex.incrementalindexingtest import IncrementalIndexingTest
 from facetindex.integerlisttest import IntegerListTest
 from facetindex.clausecollectortest import ClauseCollectorTest
+from facetindex.drilldownfieldnamestest import DrilldownFieldnamesTest
 
 from ngram.ngramtest import NGramTest
 from ngram.ngramquerytest import NGramQueryTest
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_6/test/facetindex/drilldownfieldnamestest.py version_7/test/facetindex/drilldownfieldnamestest.py
--- version_6/test/facetindex/drilldownfieldnamestest.py	1970-01-01 01:00:00.000000000 +0100
+++ version_7/test/facetindex/drilldownfieldnamestest.py	2010-05-20 10:51:29.000000000 +0200
@@ -0,0 +1,62 @@
+## begin license ##
+#
+#    Meresco Components are components to build searchengines, repositories
+#    and archives, based on Meresco Core.
+#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
+#       http://www.kennisnetictopschool.nl
+#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
+#
+#    This file is part of Meresco Components.
+#
+#    Meresco Components is free software; you can redistribute it and/or modify
+#    it under the terms of the GNU General Public License as published by
+#    the Free Software Foundation; either version 2 of the License, or
+#    (at your option) any later version.
+#
+#    Meresco Components is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU General Public License for more details.
+#
+#    You should have received a copy of the GNU General Public License
+#    along with Meresco Components; if not, write to the Free Software
+#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+## end license ##
+
+from cq2utils import CQ2TestCase, CallTrace
+from meresco.components.facetindex import DrilldownFieldnames
+from meresco.components.facetindex.drilldown import NoFacetIndexException
+
+class DrilldownFieldnamesTest(CQ2TestCase):
+
+    def testDrilldownFieldnames(self):
+        d = DrilldownFieldnames(lookup=lambda name: 'drilldown.'+name)
+        observer = CallTrace('drilldown')
+        observer.returnValues['drilldown'] = [('drilldown.field1', [('term1',1)]),('drilldown.field2', [('term2', 2)])]
+        d.addObserver(observer)
+
+        result = list(d.drilldown('docset', [('field1', 0, True),('field2', 3, False)]))
+
+        self.assertEquals(1, len(observer.calledMethods))
+        self.assertEquals([('drilldown.field1', 0, True),('drilldown.field2', 3, False)], list(observer.calledMethods[0].args[1]))
+
+        self.assertEquals([('field1', [('term1',1)]),('field2', [('term2', 2)])], result)
+
+
+    def testReverseLookupInException(self):
+        d = DrilldownFieldnames(lookup=lambda name: 'drilldown.'+name)
+        observer = CallTrace('drilldown')
+        observer.exceptions['drilldown'] = NoFacetIndexException('drilldown.wrongfield', ['field0', 'field1'])
+        d.addObserver(observer)
+
+        try:
+            d.drilldown('docset', [('wrongfield',0,True)])
+            self.fail()
+        except NoFacetIndexException, e:
+            self.assertEquals("No facetindex for field 'wrongfield'. Available fields: 'field0', 'field1'", str(e))
+            self.assertEquals('wrongfield', e.field)
